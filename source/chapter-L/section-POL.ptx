<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="section-POL">
    <title>Properties of Logic</title>
    

    <subsection>
        <title>De Morgan's Laws</title>
        <p>
            In general, the negation of a conjunction of two statements, <m>P \land Q</m>, is logically equivalent to the disjunction of their negations, or <m>\neg P \lor \neg Q</m>. This can be verified using truth tables,
        </p>
        <me>
            \begin{array}{cc|ccc|cc}
                P \amp Q \amp \neg P \amp \neg Q \amp P \land Q \amp \neg (P \land Q) \amp \neg P \lor \neg Q \\ \hline
                T \amp T \amp F \amp F \amp T \amp F \amp F \\ \hline
                T \amp F \amp F \amp T \amp F \amp T \amp T \\ \hline
                F \amp T \amp T \amp F \amp F \amp T \amp T \\ \hline
                F \amp F \amp T \amp T \amp F \amp T \amp T
            \end{array}
        </me>
        <p>
            Notice that the two right-most columns have the same truth values. Similarly, in general, the negation of a disjunction of two statements, <m>P \lor Q</m>, is logically equivalent to the conjunction of their negations, or <m>\neg P \land \neg Q</m>. Again, using a truth table,
        </p>
        <me>
            \begin{array}{cc|ccc|cc}
                P \amp Q \amp \neg P \amp \neg Q \amp P \lor Q \amp \neg (P \lor Q) \amp \neg P \land \neg Q \\ \hline
                T \amp T \amp F \amp F \amp T \amp F \amp F \\ \hline
                T \amp F \amp F \amp T \amp T \amp F \amp F \\ \hline
                F \amp T \amp T \amp F \amp T \amp F \amp F \\ \hline
                F \amp F \amp T \amp T \amp F \amp T \amp T
            \end{array}
        </me>
        <p>
            In summary,
        </p>

        <theorem>
            <title>DeMorgan's laws</title>
            <p>
                <ul>
                    <li>
                        <term>Negation of a conjunction</term>. THe negation of an <q>and</q> statement is logically equivalent to the <q>or</q> statement where each component is negated,
                        <me>
                            \neg (P \land Q) \equiv (\neg P) \lor (\neg Q)
                        </me>
                    </li>
                    <li>
                        <term>Negation of a disjunction</term>. The negation of an <q>or</q> statement is logically equivalent to the <q>and</q> statement where each component is negated,
                        <me>
                            \neg (P \lor Q) \equiv (\neg P) \land (\neg Q)
                        </me>
                    </li>
                </ul>
            </p>
        </theorem>
        <p>
            These logical equivalences are named after <term>Augustus De Morgan</term> (1806-1871), British mathematician, who was the first to state them in formal mathematical terms.
        </p>
    </subsection>

    <subsection>
        <title>Properties of Compound Statements</title>

        <theorem>
            <title>Associative property</title>
            <p>
                <md>
                    <mrow>P \land (Q \land R) \equiv (P \land Q) \land R</mrow>
                    <mrow>P \lor (Q \lor R) \equiv (P \lor Q) \lor R</mrow>
                </md>
            </p>
        </theorem>
        <p>
            This means that parentheses are unnecessary for a sequence of only conjunctions or only disjunctions.
        </p>

        <theorem>
            <title>Commutative property</title>
            <p>
                <ul>
                    <li><m>P \land Q \equiv Q \land P</m></li>
                    <li><m>P \lor Q \equiv Q \lor P</m></li>
                </ul>
            </p>
        </theorem>

        <p>
            This intuitively means that order doesn't matter for disjunctions and conjunctions.
        </p>

        <theorem>
            <title>Distribution properties</title>
            <p>
                <ul>
                    <li>Distribution of conjunction over disjunction, <m>P \land (Q \lor R) \equiv (P \land Q) \lor (P \land R)</m></li>
                    <li>Distribution of disjunction over conjunction, <m>P \lor (Q \land R) \equiv (P \lor Q) \land (P \lor R)</m></li>
                </ul>
            </p>
        </theorem>
    </subsection>

    <subsection>
        <title>Tautologies and Contradictions</title>
        <definition>
            <p>
                A <term>tautology</term> is a statement form that is always <em>true</em> regarless of the truth values of the individual statements substituted for its statement variables. A statement whose form is a tautology is a <term>tautological statement</term>.
            </p>
            <p>
                A <term>contradiction</term> is a statement form that is always <em>false</em> regarless of the truth values of the individual statements substituted for its statement variables. A statement whose form is a contradiction is a <term>contradictiory statement</term>.
            </p>
        </definition>

        <p>
            For example, <m>P \lor \neg P</m> is a tautology, and <m>P \land \neg P</m> is a contradiction. If <m>T</m> is a tautology, then <m>P \land T \equiv P</m> and <m>P \lor T \equiv T</m>. If <m>C</m> is a contradiction, then <m>P \land C = C</m> and <m>P \lor C = P</m>.
        </p>
    </subsection>

    <subsection>
        <title>Truth Tables for Compound Propositions</title>
        <p>
            In general, there are <m>2^n</m> rows in a truth table for <m>n</m> simple statements.
        </p>

    </subsection>

    <subsection>
        <title>Logical Inference</title>

        <p>
            Logical inference rules are basically tautologies. They are used to construct valid arguments. The validity of an argument is completely dependent on the validity of its logical form.
        </p>
        <ul>
            <li>Modus Ponens, <m>((P \rightarrow Q) \land P) \rightarrow Q</m></li>
            <li>Modus Tollens, <m>((P \rightarrow Q) \land (\neg Q)) \rightarrow (\neg P)</m></li>
            <li>Elimination, <m>((P \lor Q) \land (\neg P)) \rightarrow Q</m></li>
        </ul>

        <p>
            Modus Ponens is basically the definition of conditional. Modus Tollens works because the contrapositive is logically equivalent to the original conditional.
        </p>

        <ul>
            <li>Transitivity (hypothetical syllogism), <m>\brac{(P \rightarrow Q) \land (Q \rightarrow R)} \rightarrow (P \rightarrow R)</m></li>
            <li>Elimination (disjunctive syllogism), <m>\brac{(P \lor Q) \land \neg P} \rightarrow Q</m></li>
        </ul>

        <ul>
            <li>Addition, <m>P \rightarrow (P \lor Q)</m></li>
            <li>Simplication, <m>(P \land Q) \rightarrow P</m>.</li>
        </ul>

        <ul>
            <li>Resolution, <m>\brac{(\neg P \lor R) \land (P \lor Q)} \rightarrow (Q \lor R)</m></li>
        </ul>

        <theorem>
            <title>Chain of implications</title>
            <p>
                <ul>
                    <li><m>((P \rightarrow Q) \land (Q \rightarrow R)) \rightarrow (P \rightarrow R)</m></li>
                    <li><m>((P \rightarrow P_1) \land (P_1 \rightarrow P_2) \land \dots \land (P_n \rightarrow Q)) \rightarrow (P \rightarrow Q)</m></li>
                </ul>
            </p>
        </theorem>
    </subsection>

</section>
